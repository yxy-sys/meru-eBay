name: meru-ebay-sync

on:
  schedule:
    # 每 15 分钟运行一次（UTC）
    - cron: "*/45 * * * *"
  workflow_dispatch:

# 防止上一次还在跑时又触发一轮
concurrency:
  group: meru-ebay-sync
  cancel-in-progress: false

jobs:
  run-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # ==== eBay 凭证 ====
      EBAY_DEV_ID:       ${{ secrets.EBAY_DEV_ID }}
      EBAY_APP_ID:       ${{ secrets.EBAY_APP_ID }}
      EBAY_CERT_ID:      ${{ secrets.EBAY_CERT_ID }}
      EBAY_AUTH_TOKEN:   ${{ secrets.EBAY_AUTH_TOKEN }}

      # ==== 表格读取 ====
      SHEETS_MODE:       PUBLIC_CSV
      SHEET_CSV_URL:     ${{ secrets.SHEET_CSV_URL }}

      # ==== 爬取与请求 ====
      FETCH_MODE:        PLAYWRIGHT
      PW_BLOCK_MEDIA:    "true"
      REQUESTS_TIMEOUT:  "25"
      DRY_RUN:           "false"

      # （可选）保留给你的 Python 内部通知使用
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers & deps
        run: |
          python -m playwright install --with-deps chromium

      # 运行脚本并记录日志；只把失败写入 status.txt，让下一步统一发“失败通知”
      - name: Run main script (capture logs & status)
        shell: bash
        run: |
          set -o pipefail
          python main_gsheets.py 2>&1 | tee run.log
          CODE=${PIPESTATUS[0]}
          if [ $CODE -ne 0 ]; then
            echo "error" > status.txt
          fi
          exit $CODE

      # 仅在失败时由工作流发 Telegram 通知（成功/清零通知由 Python 内部 notify() 负责）
      - name: Notify Telegram on fail
        if: failure()
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          RUN_URL:   ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        shell: bash
        run: |
          if [ -z "$BOT_TOKEN" ] || [ -z "$CHAT_ID" ]; then
            echo "Telegram secrets not set, skip notify."
            exit 0
          fi
          TEXT="❌ eBay 同步失败，请检查运行日志。\n🔗 $RUN_URL"
          curl -sS -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
               -H "Content-Type: application/json" \
               -d "{\"chat_id\":\"${CHAT_ID}\",\"text\":\"${TEXT}\",\"disable_web_page_preview\":true}" \
               >/dev/null
          echo "Sent Telegram fail notify"

      - name: Upload logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-logs
          path: |
            run.log
            **/*.log
            logs/**
          if-no-files-found: ignore
